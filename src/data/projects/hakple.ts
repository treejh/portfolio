import { Project } from "../../types/project";

export const hakple: Project = {
  id: "hakple",
  title: "Hakple (학원생 커뮤니티 플랫폼)",
  period: "2025.04.03 ~ 2025.05.01",
  description:
    "학원 수강생들이 자유롭게 소통하고 정보를 공유할 수 있는 커뮤니티 플랫폼",
  longDescription: `
        Hakple은 학원 수강생들이 자유롭게 소통하고 정보를 공유할 수 있는 커뮤니티 플랫폼입니다.
        회원 관리, 게시판, 공지사항, 댓글, 좋아요, 알림, 캘린더, 관리자 페이지 등 다양한 기능을 제공합니다.
      `,
  role: "백엔드 개발, 프론트엔드 전체 구현",
  github: "https://github.com/golden-dobakhe/hakple",
  liveDemo: "https://www.hakple.site",
  technologies: [
    "Java",
    "Spring Boot",
    "Spring Security",
    "JavaScript",
    "React",
    "Next.js",
    "TypeScript",
    "MySQL",
    "Redis",
    "AWS S3",
    "Docker",
    "Terraform",
    "AWS EC2",
    "GitHub Actions",
    "NGINX",
    "Swagger",
  ],
  features: [
    "👥 회원 관리",
    "• JWT(JSON Web Token) 기반 인증 시스템으로 보안 강화",
    "• 신규 사용자 회원가입 및 기존 사용자 로그인 기능",
    "• 사용자 휴대폰 번호 변경 및 프로필 이미지 변경 기능",
    "• 개인화된 서비스 이용 지원",
    "",
    "📝 게시판 기능",
    "• 자유 게시판: 사용자들이 자유롭게 소통할 수 있는 공간",
    "• 인기 게시판: 조회수, 좋아요 수 기반 인기글 선별",
    "• 게시글 작성, 수정, 삭제 기능 제공",
    "",
    "📢 공지사항",
    "• 관리자 공지사항 등록 및 관리 기능",
    "• 사용자 공지사항 조회 및 열람 기능",
    "• 효율적인 정보 전달 시스템",
    "",
    "💬 댓글 & 좋아요",
    "• 게시글 댓글 작성, 수정, 삭제 기능",
    "• 게시글 &apos;좋아요&apos; 기능으로 상호작용 활성화",
    "• 커뮤니티 기능 강화",
    "",
    "🔔 실시간 알림",
    "• 댓글 작성 시 실시간 알림",
    "• 게시글 &apos;좋아요&apos; 시 실시간 알림",
    "• 공지사항 등록 시 실시간 알림",
    "• 서비스 참여도 향상",
    "",
    "📅 캘린더",
    "• 개인화된 캘린더 화면 제공",
    "• 일정 추가, 수정, 삭제 기능",
    "• 일정 알림 기능으로 효율적인 일정 관리",
    "• 중요한 일정 놓침 방지",
    "",
    "⚙️ 관리자 기능",
    "• 학원 정보 관리 (등록, 수정)",
    "• 관리자 계정 관리 (추가, 수정, 삭제)",
    "• 전체 회원 목록 조회 및 관리",
    "• 효율적인 시스템 운영 지원",
  ],
  challenges:
    "여러 사용자의 동시 접속과 실시간 데이터 업데이트를 처리하는 과정에서 성능 최적화에 도전했습니다.",
  lessons:
    "이 프로젝트를 통해 대규모 데이터를 효율적으로 처리하는 방법과 실시간 기능을 구현하는 기술을 배웠습니다. 또한 팀 협업 과정에서 효과적인 커뮤니케이션의 중요성을 깨달았습니다.",
  team: [
    { name: "박주호", role: "팀장" },
    { name: "김명수", role: "부팀장" },
    { name: "고희은", role: "팀원" },
    { name: "도상원", role: "팀원" },
    { name: "황지윤", role: "팀원" },
  ],
  myContributions: [
    {
      title: "회원 및 인증 기능",
      details: [
        "JWT 인증 기반 로그인 처리 구현 및 사용자 상태(정상/정지)에 따른 접근 제어 필터 적용",
        "이메일 인증: Google SMTP를 활용한 이메일 인증 기능 구현 (회원가입 및 비밀번호 재설정 시 사용)",
        "휴대폰 인증: 누리고 SMS API를 활용한 휴대폰 본인 인증 및 인증번호 검증 기능 개발",
        "RTR 방식의 인증 구조 적용: Access Token + Refresh Token 구조로 로그인 세션 유지",
        "Refresh Token은 Redis에 저장하고 만료 시간에 따라 자동 삭제되도록 설정",
        "회원 등급/권한 관리 로직: 최초 매니저 / 일반 매니저 / 일반 회원 3단계로 구분하여 처리",
        "회원 승인 절차: 최초 매니저는 일반 매니저 가입 승인, 매니저(최초/일반)는 일반 회원 가입 승인 가능",
        "회원 가입 요청에 대한 승인 / 반려 기능 구현 및 상태에 따른 알림 처리 포함",
      ],
    },
    {
      title: "비밀번호 재설정 기능 구현",
      details: [
        "누리고 SMS API를 활용하여 휴대폰 인증 기반 비밀번호 재설정 기능 개발",
        "6자리 랜덤 인증번호 생성 및 5분 유효 시간 설정",
        "Redis를 활용한 인증번호 임시 저장 및 관리",
        "사용자 보안성을 고려한 토큰 검증 및 예외 처리 로직 구성",
      ],
    },
    {
      title: "댓글 기능 개발",
      details: [
        "게시글 댓글 작성, 삭제, 수정, 신고 기능 구현",
        "JWT 기반 토큰 인증을 통해 사용자 권한 검증 및 요청 처리",
        "소프트 딜리트(Soft Delete) 패턴 적용으로 데이터 무결성 유지",
      ],
    },
    {
      title: "캘린더 기능 개발",
      details: [
        "사용자 맞춤 일정 등록/수정/삭제 기능이 포함된 캘린더 페이지 구현",
        "FullCalendar 라이브러리 기반으로 직관적인 UI 개발",
        "일정 알림 및 카테고리별 필터링 기능 추가",
      ],
    },
    {
      title: "프론트엔드 전체 구현 (Next.js 기반)",
      details: [
        "전체 페이지 디자인을 총괄하며 일관된 디자인 시스템 및 스타일링 전략 적용",
        "반응형 레이아웃 설계로 다양한 기기에서의 최적화된 사용자 경험 제공",
        "상태 관리 및 API 연동 구조 설계로 효율적인 데이터 흐름 구현",
      ],
    },
    {
      title: "사용자 마이페이지(내 정보 페이지) 구현",
      details: [
        "사용자 활동 내역 조회 및 관리 기능 개발",
        "비밀번호 변경 기능 구현",
      ],
    },
    {
      title: "접근성 및 성능 최적화",
      details: [
        "다양한 기기에서도 편리하게 사용할 수 있도록 반응형 레이아웃 설계",
        "스켈레톤 UI 적용으로 로딩 상태에서의 사용자 경험 개선",
      ],
    },
  ],
  reflections: [
    {
      title: "협업의 중요성 인식",
      details: [
        "기능 구현보다 소통이 더 중요하다는 것을 느꼈습니다.",
        "이슈 등록, PR 메시지, 커밋 메시지 등의 규칙을 정해두는 것이 중요하다는 것을 깨달았습니다.",
      ],
    },
    {
      title: "문서화의 필요성",
      details: [
        "API 명세서, 요구 사항 정의서, ERD, 역할 분담 등을 문서화하고 팀원들과 공유하는 것이 중요하다는 것을 알게 되었습니다.",
        "트러블 슈팅 기록을 통해 같은 문제가 생겼을 때 빠르게 해결할 수 있었습니다.",
      ],
    },
    {
      title: "테스트의 중요성",
      details: [
        "더 안정적인 코드를 위해 테스트의 중요성을 느꼈습니다.",
        "다음 프로젝트에는 제대로 된 테스트 도구를 활용하고 싶습니다.",
      ],
    },
    {
      title: "패키지 구조의 중요성",
      details: [
        "프로젝트 규모가 커질수록 도메인별로 패키지를 나누는 것이 유지보수에 좋다는 것을 느꼈습니다.",
      ],
    },
    {
      title: "새로운 기술 경험",
      details: [
        "카카오 로그인, 누리고 SMS 인증 API, Soft Delete, meAPI, fetchAPI, 블랙리스트 토큰 등 처음 사용해본 기술들을 경험했습니다.",
        "다음에는 처음부터 카카오 로그인 구현이나 배포를 직접 해보고 싶다는 생각이 들었습니다.",
      ],
    },
    {
      title: "성능 최적화에 대한 관심",
      details: [
        "DB 요청 속도 줄이기나 AI 기능 추가 등 성능 최적화에 대한 욕심이 생겼습니다.",
      ],
    },
  ],
  thumbnail: "/images/project-thumb.jpg",
};
