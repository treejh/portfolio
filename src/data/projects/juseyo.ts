import { Project } from "../../types/project";

export const juseyo: Project = {
  id: "juseyo",
  title: "Juseyo (재고/자산 관리 플랫폼)",
  period: "2025.05.02 ~ 2025.06.02",
  description:
    "기업별 자산과 재고를 효율적으로 관리하고 요청·승인 프로세스를 자동화하는 재고 관리 플랫폼",
  longDescription: `
        Juseyo는 자산과 재고를 효율적으로 관리하고, 요청 및 승인 프로세스를 자동화하는 재고 관리 플랫폼입니다.
        단순한 자산 등록/조회 기능을 넘어, 부서별 자산 분류, 체계적인 요청 흐름, 실시간 재고 현황 파악까지 하나의 시스템 안에서 통합 관리할 수 있도록 설계되었습니다.
      `,
  role: "개발 팀장, 백엔드 개발, 프론트엔드 개발",
  github: "https://github.com/treejh/JUSEYO",
  liveDemo: "https://www.app.jusey0.site/",
  technologies: [
    "Java",
    "Spring Boot",
    "Spring Security",
    "MySQL",
    "React",
    "Next.js",
    "TypeScript",
    "Docker",
    "AWS EC2",
    "AWS S3",
    "NGINX",
    "Terraform",
    "GitHub Actions",
    "Redis",
    "Swagger",
    "JavaScript",
  ],
  features: [
    "🌟 부서 및 역할(Role) 기반 권한 관리",
    "🔄 요청 → 승인 → 반납 흐름 구조",
    "📊 실시간 상태 추적 및 Excel 입출력",
    "💬 SSE 기반 알림 & STOMP 기반 실시간 채팅",
    "🤖 사용자 맞춤 비품 추천 기능 구현",
    "회원 & 인증 - 역할 기반 회원가입, JWT 인증, 이메일 & 휴대폰 인증",
    "비품 관리 - 비품 등록/수정/삭제/조회, 요청 생성/승인/반려, 출고/입고 상태 추적",
    "실시간 채팅 - 1:1 / 고객센터 / 단체방, STOMP + SockJS + JWT 인증",
    "실시간 알림 - SSE 기반 실시간 알림, 역할 기반 이벤트 알림",
    "검색 및 추천 - 키워드/카테고리 기반 검색, 협업 필터링 알고리즘을 통한 비품 추천",
  ],
  challenges:
    "대규모 기업의 복잡한 자산 관리 프로세스를 효율적으로 자동화하고, 실시간 데이터 처리와 사용자 맞춤 추천 시스템을 구현하는 과정에서 성능 최적화에 도전했습니다.",
  lessons:
    "이 프로젝트를 통해 PM 역할을 수행하며 팀 관리와 프로젝트 기획의 중요성을 배웠습니다. 또한 복잡한 비즈니스 로직을 체계적으로 설계하고, 실시간 기능과 AI 추천 시스템을 구현하는 기술을 습득했습니다.",
  team: [
    { name: "황지윤", role: "PM" },
    { name: "장지현", role: "개발 팀장" },
    { name: "홍보람", role: "팀원" },
    { name: "근하람", role: "팀원" },
    { name: "이현석", role: "팀원" },
  ],
  myContributions: [
    {
      title: "회원 및 인증 기능",
      details: [
        "JWT 인증 기반 로그인 처리 구현 및 사용자 상태(정상/정지)에 따른 접근 제어 필터 적용",
        "이메일 인증: Google SMTP를 활용한 이메일 인증 기능 구현 (회원가입 및 비밀번호 재설정 시 사용)",
        "휴대폰 인증: 누리고 SMS API를 활용한 휴대폰 본인 인증 및 인증번호 검증 기능 개발",
        "RTR 방식의 인증 구조 적용: Access Token + Refresh Token 구조로 로그인 세션 유지",
        "Refresh Token은 Redis에 저장하고 만료 시간에 따라 자동 삭제되도록 설정",
        "회원 등급/권한 관리 로직: 최초 매니저 / 일반 매니저 / 일반 회원 3단계로 구분하여 처리",
        "회원 승인 절차: 최초 매니저는 일반 매니저 가입 승인, 매니저(최초/일반)는 일반 회원 가입 승인 가능",
      ],
    },
    {
      title: "STOMP 기반 실시간 채팅 기능",
      details: [
        "1:1 / 그룹 / 고객센터 채팅방 생성 기능 구현 (중복 채팅방 방지 로직 포함)",
        "채팅방 입장, 나가기, 메시지 송수신 등 전반적인 실시간 채팅 흐름 구현",
        "STOMP + SockJS를 활용한 WebSocket 메시지 처리 구조 설계",
        "JWT 쿠키 기반 세션 인증 및 사용자별 메시지 권한 검증",
        "마지막 입장 시간 기준으로 ‘NEW’ 뱃지 표시 여부 계산 기능 구현",
        "채팅방의 참여자 목록, 상대방 정보, 새 메시지 여부 등의 조회 API 제공",
        "고객센터 전용 채팅방에서는 랜덤 매니저 매칭 로직 포함",
        "메시지, 채팅방, 참여자 정보는 모두 RDS(MySQL)에 영속화하여 기록 관리",
        "사용자가 모두 퇴장한 채팅방은 Redis를 활용해 자동 삭제 예약 처리 (지연 삭제)",
        "채팅방 상태(ENTER, CREATE, INVITED 등)에 따른 행동 제어 및 예외 처리 로직 구현",
      ],
    },
    {
      title: "S3 기반 이미지 업로드 및 삭제 기능",
      details: [
        "Amazon S3를 활용한 이미지 업로드 및 삭제 기능 구현",
        "시간 기반 UUID를 이용해 고유한 파일명을 생성하여 충돌 방지",
        "파일 업로드 시 Content-Type을 명시하여 브라우저 내 자동 다운로드 현상 방지",
        "업로드된 파일은 `PublicRead` 권한을 적용해 웹에서 바로 접근 가능하도록 설정",
        "업로드 완료 후 S3에 저장된 이미지의 URL 반환",
        "이미지 삭제 시 `.com/` 경로 이후 키값을 추출하여 S3 객체 삭제 수행",
        "예외 상황(삭제 실패 등)에 대해 커스텀 `BusinessLogicException` 처리 적용",
      ],
    },
    {
      title: "프로젝트 디자인 및 기술 총괄",
      details: [
        "회원가입, 로그인, 채팅 등 주요 기능 화면 디자인 직접 설계 및 프론트 구현 연동",
        "공통 버튼, 입력창, 카드 등 UI 컴포넌트를 기준화하여 일관된 사용자 경험 제공",
        "디자인 시스템 기반으로 팀원들과 협업하여 재사용 가능한 컴포넌트 구조 정립",
        "에러 발생 시 팀 내 주요 기술 이슈 직접 디버깅 및 해결, 개발 총괄 역할 수행",
        "팀 내 프론트/백엔드 개발 가이드 제시 및 기능 구현 방향성 주도",
      ],
    },
  ],
  reflections: [
    {
      title: "PM 역할의 중요성",
      details: [
        "프로젝트 기획부터 배포까지 전체 과정을 관리하며 팀 리더십의 중요성을 깨달았습니다.",
        "명확한 요구사항 정의와 일정 관리가 프로젝트 성공의 핵심임을 배웠습니다.",
      ],
    },
    {
      title: "복잡한 비즈니스 로직 설계",
      details: [
        "기업의 실제 업무 프로세스를 시스템화하는 과정에서 도메인 설계의 중요성을 경험했습니다.",
        "상태 관리와 워크플로우 설계를 통해 확장 가능한 아키텍처의 필요성을 느꼈습니다.",
      ],
    },
    {
      title: "AI 추천 시스템 구현",
      details: [
        "협업 필터링 알고리즘을 구현하며 데이터 분석과 머신러닝의 기초를 배웠습니다.",
        "사용자 행동 데이터를 분석하여 개인화된 서비스를 제공하는 방법을 습득했습니다.",
      ],
    },
    {
      title: "팀 협업과 커뮤니케이션",
      details: [
        "다양한 역할의 팀원들과 협업하며 효과적인 의사소통의 중요성을 깨달았습니다.",
        "기술적 의사결정과 비즈니스 요구사항의 균형을 맞추는 리더십을 경험했습니다.",
      ],
    },
  ],
  thumbnail: "/images/project-thumb.jpg",
};
